insert_beat(now, source, palette_position) {
    Buffer memory("memory");
    Buffer past_beats("past_beats");
    Buffer starting_frame("starting_frame");
    Buffer unlocked_start("unlocked_start");
	Buffer memory_cursor("memory_cursor");
    Buffer oldest("oldest");
    oldest_index = peek(oldest, 0);
    beat = ((oldest_index - peek(past_beats, 0)) + dim(memory)) % dim(memory);  //gen is too stupid to % a negative number correctly
    poke(memory, now, beat, 0);
    poke(memory, now, beat, 1);
    poke(memory, source, beat, 2);
    poke(memory, 0, beat, 3);  //Scores are updated in analyze() but are zeroed out here first in case 
    poke(memory, 0, beat, 4);  //of a miss (forced or otherwise)
    song_start = peek(starting_frame, 0);   
    if(!song_start) {                       //if no song_start it's implied to be jamming, not recitation
        first_hit = peek(unlocked_start, 0);
        if(first_hit) {
            poke(memory, 0, beat, 5);          //Set to 0 so final unlocked_start will be used at cleanup
        }
        else {                              //Unlocked misses must have song_start set to something
            poke(memory, now, beat, 5);        //Using `now` give them each their own pass, auditioning as 
        }                                   //1st note in song, which works well enough
    }                                       
    else {                                  
        poke(memory, song_start, beat, 5);
    }
    poke(memory, palette_position, beat, 6);
    //Increment everything that's keeping track of a memory index
    poke(past_beats, peek(past_beats, 0) + 1, 0);
	if(peek(memory_cursor, 0) >= 0) {
    	poke(memory_cursor, peek(memory_cursor, 0) + 1, 0);
	}
    return beat;
}